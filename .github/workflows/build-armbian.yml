name: Build Armbian  
  
on:  
  workflow_dispatch:  
    inputs:  
      BOARD:  
        description: 'Board type'  
        required: true 
        default: 'tpm312'
        type: choice
        options:
          - tpm312
      BRANCH:  
        description: 'Armbian branch'  
        default: 'current'  
        required: false 
        type: choice 
        options:
          - current
          - edge
      RELEASE:  
        description: 'Release name' 
        default: 'bookworm'
        required: true  
        type: choice
        options:
          - jammy
          - noble
          - bullseye
          - bookworm
      BUILD_MINIMAL:  
        description: 'Build minimal system'  
        default: 'no'  
        required: false  
        type: choice
        options:
          - no
          - yes
      BUILD_DESKTOP:  
        description: 'Build desktop environment'  
        default: 'no'  
        required: false  
        type: choice
        options:
          - no
          - yes
      KERNEL_CONFIGURE:  
        description: 'Configure kernel'  
        default: 'no'  
        required: false  
        type: choice 
        options:
          - no
      COMPRESS_OUTPUTIMAGE:  
        description: 'Compress output image'  
        default: 'sha,xz'  
        required: false  
        type: string  
      BOOT_LOGO:  
        description: 'Include boot logo'  
        default: 'no'  
        required: false  
        type: choice 
        options:
          - no
          - yes
  
jobs:  
  build-armbian:  
    runs-on: ubuntu-latest  
    steps:  
      - name: Checkout  
        uses: actions/checkout@v3  
        with:  
          path: ${{ github.workspace }}/build  
  
      - name: Clone Armbian Source  
        run: |  
          mkdir -p /home/runner/work/main  
          git clone -q --single-branch --depth=1 --branch=main https://github.com/armbian/build.git /home/runner/work/main   
          cp -f ${{ github.workspace }}/build/* /home/runner/work/main/build/  
  
      - name: Add Build Parameters to compile.sh  
        run: |  
          echo "BOARD=${{ github.event.inputs.BOARD }}" >> /home/runner/work/main/build/compile.sh  
          echo "BRANCH=${{ github.event.inputs.BRANCH }}" >> /home/runner/work/main/build/compile.sh  
          echo "RELEASE=${{ github.event.inputs.RELEASE }}" >> /home/runner/work/main/build/compile.sh  
          echo "BUILD_MINIMAL=${{ github.event.inputs.BUILD_MINIMAL }}" >> /home/runner/work/main/build/compile.sh  
          echo "BUILD_DESKTOP=${{ github.event.inputs.BUILD_DESKTOP }}" >> /home/runner/work/main/build/compile.sh  
          echo "KERNEL_CONFIGURE=${{ github.event.inputs.KERNEL_CONFIGURE }}" >> /home/runner/work/main/build/compile.sh  
          echo "COMPRESS_OUTPUTIMAGE=${{ github.event.inputs.COMPRESS_OUTPUTIMAGE }}" >> /home/runner/work/main/build/compile.sh  
          echo "BOOT_LOGO=${{ github.event.inputs.BOOT_LOGO }}" >> /home/runner/work/main/build/compile.sh  
  
      - name: Execute compile.sh  
        run: |  
          cd /home/runner/work/main/build  
          chmod +x compile.sh  
          ./compile.sh  
  
      - name: Create Release  
        if: success()  
        uses: ncipollo/release-action@main  
        with:  
          artifacts: "/home/runner/work/main/build/output/images/*"  
          token: ${{ secrets.MY_TOKEN }}  
          tag: "Armbian_${{ github.event.inputs.RELEASE }}_${{ (now.strftime('%Y%m')) }}"  
          name: "Armbian ${{ github.event.inputs.RELEASE }} Build (${{ now.strftime('%Y-%m-%d') }})"  
          body: "Automated build of Armbian for ${{ github.event.inputs.BOARD }} using ${{ github.event.inputs.RELEASE }}."  
          draft: false  
          prerelease: false  
  
      - name: Cleanup  
        if: success()  
        run: |  
          rm -rf /home/runner/work/main/build/output/images/*
